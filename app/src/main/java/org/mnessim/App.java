/*
 * This source file was generated by the Gradle 'init' task
 */
package org.mnessim;

import java.util.Scanner;

public class App {

    public static final String ANSI_RESET = "\u001B[0m";
    public static final String ANSI_BLACK = "\u001B[30m";
    public static final String ANSI_RED = "\u001B[31m";
    public static final String ANSI_GREEN = "\u001B[32m";
    public static final String ANSI_YELLOW = "\u001B[33m";
    public static final String ANSI_BLUE = "\u001B[34m";
    public static final String ANSI_PURPLE = "\u001B[35m";
    public static final String ANSI_CYAN = "\u001B[36m";
    public static final String ANSI_WHITE = "\u001B[37m";

    public static void main(String[] args) {

        String cwd = System.getProperty("user.dir");
        String PROMPT = ANSI_CYAN + cwd + "::j-shell$ ";
        Scanner scanner = new Scanner(System.in);

        System.out.println(ANSI_PURPLE + ShellFunctions.getInfo());

        while (true) {
            System.out.print(PROMPT + ANSI_WHITE);
            String input = scanner.nextLine();

            ArgParser p = new ArgParser(input);

            //debugPrint(p);
            dispatchCommand(p);
        }
    }

    @SuppressWarnings("unused")
    private static void debugPrint(ArgParser p) {
        String c = p.getCommand();
        char[] f = p.getFlags();
        String[] a = p.getArguments();
        System.out.print("C: " + c + " F: [");
        if (f != null) {
            for (int i = 0; i < f.length; i++) {
                System.out.print(f[i]);
                if (i < f.length - 1) {
                    System.out.print(", ");
                }
            }
        }
        System.out.print("] A: [");
        if (a != null) {
            for (int i = 0; i < a.length; i++) {
                System.out.print(a[i]);
                if (i < a.length - 1) {
                    System.out.print(", ");
                }
            }
        }
        System.out.println("]");
    }

    /**
     * Dispatches various command helper functions. Prints error message for
     * unrecognized commands
     *
     * @param p ArgParser class
     */
    private static void dispatchCommand(ArgParser p) {
        switch (p.getCommand().toLowerCase()) {
            case "exit" ->
                System.exit(0);
            case "cat" ->
                System.out.println(ANSI_YELLOW + ShellFunctions.cat(p));
            case "sysinfo" ->
                System.out.println(ANSI_PURPLE + ShellFunctions.getInfo());
            case "help" ->
                System.out.println(ANSI_GREEN + ShellFunctions.help());
            case "ls" ->
                System.out.println(ANSI_YELLOW + ShellFunctions.LS(p));
            case "" -> {
            }
            default ->
                System.out.println(ANSI_RED + "command \"" + p.getCommand() + "\" not recognized" + ANSI_WHITE);
        }
    }
}
